import streamlit as st
import requests
from binance.client import Client

# URL du backend pour la pr√©diction
BACKEND = "http://fastapi:8001"

# Initialiser le client Binance
client = Client(api_key='your_api_key', api_secret='your_api_secret')

st.set_option('deprecation.showPyplotGlobalUse', False)
st.set_page_config(page_title="prediction", page_icon="üîÆ", layout="wide")


def get_close_prices(nb_day: int):
    """
    R√©cup√®re les derniers prix de cl√¥ture depuis le backend.

    Returns:
    list[float]: La liste des derniers prix de cl√¥ture.
    """
    response = requests.get(BACKEND + "/prices", params={"nb_day": nb_day})
    response.raise_for_status()
    return response.json()['prices']

# R√©cup√©rer les derniers prix de cl√¥ture depuis le backend avec un count de 3
close_prices = get_close_prices(nb_day=3)


def make_prediction(data):
    """
    Fait une pr√©diction en utilisant le backend.

    Args:
    data (list[float]): Les donn√©es √† utiliser pour la pr√©diction.

    Returns:
    list[float]: La pr√©diction renvoy√©e par le backend.
    """
    payload = {"data": data}
    response = requests.post(BACKEND + "/predict", json=payload)
    response.raise_for_status()
    return response.json()['prediction']

# Interface utilisateur Streamlit
st.title('Pr√©vision du prix du BTC')


# Cr√©er un bouton pour pr√©dire le prix
if st.button("Predict"):
    prediction = make_prediction(close_prices)
    st.write('Pr√©diction :', prediction)