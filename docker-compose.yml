services:
  Database:
    container_name: Database
    image: timescale/timescaledb:latest-pg15
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - crypto_network
  initdb:
    container_name: initdb
    image: datascientestopa/crypto-initdb:1.0.0
    environment:
      DATA_DB_INSTANCE: postgres
      DATA_DB_HOST: Database
      DATA_DB_PORT: 5432
      DATA_DB_USERNAME: postgres
      DATA_DB_PASSWORD: postgres
      PP_DB_INSTANCE:
      APP_DB_HOST: Database
      APP_DB_PORT: 5432
      APP_DB_USERNAME: postgres
      APP_DB_PASSWORD: postgres
    restart: always
    depends_on:
      - Database
    networks:
      - crypto_network
  api:
    container_name: api
    image: datascientestopa/crypto-api:1.0.0
    environment:
      DATA_DB_INSTANCE: postgres
      DATA_DB_HOST: Database
      DATA_DB_PORT: 5432
      DATA_DB_USERNAME: postgres
      DATA_DB_PASSWORD: postgres
      PP_DB_INSTANCE:
      APP_DB_HOST: Database
      APP_DB_PORT: 5432
      APP_DB_USERNAME: postgres
      APP_DB_PASSWORD: postgres
      JWT_SECRET_KEY: 691e8c6af809eedcff3769ea94eb331025868d3f82cbc8bb0771087cdf3abd2b #change me: use 'openssl rand -hex 32' to generate one
      JWT_REFRESH_SECRET_KEY: 95ba05f3438b434a4bdb3d8cfc08288c8120549dc17b29ba8279c54ed631eb55 #change me: use 'openssl rand -hex 32' to generate one
    restart: always
    volumes:
      - "./models:/usr/crypto/models"
    ports:
      - 8000:8000
    depends_on:
      - Database
    networks:
      - crypto_network
  websocket:
    container_name: websocket
    image: datascientestopa/crypto-websocket:1.0.0
    environment:
      DATA_DB_INSTANCE: postgres
      DATA_DB_HOST: Database
      DATA_DB_PORT: 5432
      DATA_DB_USERNAME: postgres
      DATA_DB_PASSWORD: postgres
      PP_DB_INSTANCE:
      APP_DB_HOST: Database
      APP_DB_PORT: 5432
      APP_DB_USERNAME: postgres
      APP_DB_PASSWORD: postgres
    depends_on:
      - Database
    networks:
      - crypto_network
  frontend:
    container_name: frontend
    image: datascientestopa/crypto-frontend:1.0.0
    environment:
      DATA_DB_INSTANCE: postgres
      DATA_DB_HOST: Database
      DATA_DB_PORT: 5432
      DATA_DB_USERNAME: postgres
      DATA_DB_PASSWORD: postgres
      PP_DB_INSTANCE:
      APP_DB_HOST: Database
      APP_DB_PORT: 5432
      APP_DB_USERNAME: postgres
      APP_DB_PASSWORD: postgres
      API_HOST: api
      API_PORT: 8000
      API_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODYzMTAyMTcsInN1YiI6ImFkbWluIiwiaXNfYXBpX2tleSI6ZmFsc2V9.vnswsKpYBcxYfzTo8q4Pzgu4ymJR4be7RlLlLlHzxIY
    ports:
      - 8501:8501
    depends_on:
      - Database
    networks:
      - crypto_network
networks:
  crypto_network:
    driver: bridge